{"version":3,"sources":["components/friends/friends-list-item/FriendListItem.module.css","components/statistics/statistics-list/StatisticsList.module.css","components/statistics/Statistics.module.css","components/friends/FriendsList.module.css","images/defaultImg.jpg","components/profile/user-info/UserInfo.js","components/profile/stat-list/StatList.js","components/profile/Profile.js","components/statistics/statistics-list/StatisticsList.js","components/statistics/Statistics.js","components/friends/friends-list-item/FriendListItem.js","components/friends/FriendsList.js","components/transactions/transaction-item/TransactionItem.js","components/transactions/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","UserInfo","avatar","name","tag","location","className","src","alt","defaultProps","defaultImg","StatList","stats","followers","views","likes","Profile","colorRandomizer","randomColor","j","push","Math","floor","random","StatisticsList","styles","statList","map","stat","item","style","backgroundColor","label","percentage","id","Satistics","title","statistics","FriendListItem","isOnline","status","color","width","FriendsList","friends","friendList","friend","TransactionItem","type","amount","currency","TransactionHistory","transactions","transaction","App","userData","Statistics","statData","friendsData","transactionsData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88671aa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2oD5C\",\"status\":\"FriendListItem_status__1PmT2\",\"avatar\":\"FriendListItem_avatar__3ZrJU\",\"name\":\"FriendListItem_name__1BgpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatisticsList_statList__1H99F\",\"item\":\"StatisticsList_item__i6dHI\",\"label\":\"StatisticsList_label__2QFIu\",\"percentage\":\"StatisticsList_percentage__30C_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2S6ND\",\"title\":\"Statistics_title__E7xoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__3rvSH\"};","export default __webpack_public_path__ + \"static/media/defaultImg.5fa38171.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport defaultImg from \"../../../images/defaultImg.jpg\";\r\nimport \"./UserInfo.css\";\r\n\r\nconst UserInfo = ({ avatar, name, tag, location }) => (\r\n  <div className=\"profile-description\">\r\n    <img\r\n      src={avatar}\r\n      alt={`Аватар пользователя ${name}`}\r\n      className=\"profile-avatar\"\r\n    />\r\n    <p className=\"profile-name\">{name}</p>\r\n    <p className=\"profile-tag\">@{tag}</p>\r\n    <p className=\"profile-location\">{location}</p>\r\n  </div>\r\n);\r\n\r\nUserInfo.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nUserInfo.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./StatList.css\";\r\n\r\nconst StatList = ({ stats }) => (\r\n  <ul className=\"profile-stats-list\">\r\n    <li className=\"profile-stats-item\">\r\n      <span className=\"profile-stats-label\">Followers </span>\r\n      <span className=\"profile-stats-quantity\">{stats.followers}</span>\r\n    </li>\r\n    <li className=\"profile-stats-item\">\r\n      <span className=\"profile-stats-label\">Views </span>\r\n      <span className=\"profile-stats-quantity\">{stats.views}</span>\r\n    </li>\r\n    <li className=\"profile-stats-item\">\r\n      <span className=\"profile-stats-label\">Likes </span>\r\n      <span className=\"profile-stats-quantity\">{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\nStatList.propTypes = {\r\n  stats: PropTypes.object.isRequired,\r\n};\r\nexport default StatList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Profile.css\";\r\n\r\nimport UserInfo from \"./user-info/UserInfo\";\r\nimport StatList from \"./stat-list/StatList\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className=\"profile-wrapper\">\r\n    <UserInfo avatar={avatar} name={name} tag={tag} location={location} />\r\n    <StatList stats={stats} />\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./StatisticsList.module.css\";\r\n\r\nconst colorRandomizer = function () {\r\n  const randomColor = [];\r\n  for (let j = 0; j < 3; j++) {\r\n    randomColor.push(Math.floor(Math.random() * (200 - 50) + 50));\r\n  }\r\n  return randomColor;\r\n};\r\n\r\nconst StatisticsList = ({ stats }) => (\r\n  <ul className={styles.statList}>\r\n    {stats.map((stat) => (\r\n      <li\r\n        className={styles.item}\r\n        key={stat.id}\r\n        style={{ backgroundColor: `rgb(${colorRandomizer()})` }}\r\n      >\r\n        <span className={styles.label}>{stat.label}</span>\r\n        <span className={styles.percentage}>{stat.percentage}%</span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nStatisticsList.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default StatisticsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsList from \"./statistics-list/StatisticsList\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Satistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n\r\n    <StatisticsList stats={stats} />\r\n  </section>\r\n);\r\n\r\nSatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Satistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport defaultImg from \"../../../images/defaultImg.jpg\";\r\nimport styles from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ name, isOnline, avatar }) => (\r\n  <li className={styles.item}>\r\n    {isOnline ? (\r\n      <span className={styles.status} style={{ color: \"green\" }}>\r\n        Online\r\n      </span>\r\n    ) : (\r\n      <span className={styles.status} style={{ color: \"red\" }}>\r\n        Offline\r\n      </span>\r\n    )}\r\n    <img\r\n      className={styles.avatar}\r\n      src={avatar}\r\n      alt={`Avatar of ${name}`}\r\n      width=\"48\"\r\n    />\r\n    <p className={styles.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./friends-list-item/FriendListItem\";\r\nimport styles from \"./FriendsList.module.css\";\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map((friend) => (\r\n      <FriendListItem\r\n        key={friend.id}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n        avatar={friend.avatar}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionItem = ({ type, amount, currency }) => (\r\n  <tr>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\n\r\nTransactionItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TransactionItem from \"./transaction-item/TransactionItem\";\r\nimport \"./TransactionHistory.css\";\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <div className=\"transaction-history-wrapper\">\r\n      <table className=\"transaction-history\">\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <TransactionItem\r\n              key={transaction.id}\r\n              type={transaction.type}\r\n              amount={transaction.amount}\r\n              currency={transaction.currency}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\n\r\nimport userData from \"../data/user.json\";\r\nimport statData from \"../data/statistical-data.json\";\r\nimport friendsData from \"../data/friends.json\";\r\nimport transactionsData from \"../data/transactions.json\";\r\n\r\nimport Profile from \"./profile/Profile\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport FriendsList from \"./friends/FriendsList\";\r\nimport TransactionHistory from \"./transactions/TransactionHistory\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Profile\r\n      avatar={userData.avatar}\r\n      name={userData.name}\r\n      tag={userData.tag}\r\n      location={userData.location}\r\n      stats={userData.stats}\r\n    />\r\n    <Statistics title=\"Upload stats\" stats={statData} />\r\n    <FriendsList friends={friendsData} />\r\n    <TransactionHistory transactions={transactionsData} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}